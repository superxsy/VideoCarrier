version: '3.8'

services:
  # YouTube Downloader Service
  youtube-downloader:
    build:
      context: ./services/youtube-downloader
      dockerfile: Dockerfile
    container_name: youtube-downloader
    environment:
      - REDIS_URL=redis://redis:6379/0
      - STORAGE_PATH=/app/downloads
      - LOG_LEVEL=INFO
    volumes:
      - ./downloads:/app/downloads
      - ./logs:/app/logs
    depends_on:
      - redis
    ports:
      - "8001:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for task queue
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker for background tasks
  celery-worker:
    build:
      context: ./services/youtube-downloader
      dockerfile: Dockerfile
    container_name: celery-worker
    command: celery -A app.celery worker --loglevel=info
    environment:
      - REDIS_URL=redis://redis:6379/0
      - STORAGE_PATH=/app/downloads
    volumes:
      - ./downloads:/app/downloads
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped

  # Celery Flower for monitoring
  celery-flower:
    build:
      context: ./services/youtube-downloader
      dockerfile: Dockerfile
    container_name: celery-flower
    command: celery -A app.celery flower --port=5555
    environment:
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  redis_data:

networks:
  default:
    name: videocarrier-network