apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: videocarrier
  labels:
    app: redis
    component: cache
    version: v7.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        component: cache
        version: v7.0
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
          name: redis
        command:
        - redis-server
        - --appendonly
        - "yes"
        - --maxmemory
        - "1gb"
        - --maxmemory-policy
        - "allkeys-lru"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /usr/local/etc/redis
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc
      - name: redis-config
        configMap:
          name: redis-config

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: videocarrier
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: videocarrier
data:
  redis.conf: |
    # Redis配置文件
    bind 0.0.0.0
    port 6379
    
    # 持久化配置
    appendonly yes
    appendfsync everysec
    
    # 内存配置
    maxmemory 1gb
    maxmemory-policy allkeys-lru
    
    # 安全配置
    protected-mode no
    
    # 日志配置
    loglevel notice
    
    # 性能配置
    tcp-keepalive 300
    timeout 0
    
    # 客户端配置
    tcp-backlog 511
    maxclients 10000

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: videocarrier
  labels:
    app: redis
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: downloads-pvc
  namespace: videocarrier
  labels:
    app: youtube-downloader
spec:
  accessModes:
  - ReadWriteOnce  # 修改为 ReadWriteOnce，因为 local-path provisioner 不支持 ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd  # 修改为 fast-ssd，确保使用可用的存储类

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: logs-pvc
  namespace: videocarrier
  labels:
    app: youtube-downloader
spec:
  accessModes:
  - ReadWriteOnce  # 修改为 ReadWriteOnce，因为 local-path provisioner 不支持 ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd  # 修改为 fast-ssd，确保使用可用的存储类